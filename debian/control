Source: protobuf
Section: devel
Priority: extra
Maintainer: Ubuntu Core Developers <ubuntu-devel-discuss@lists.ubuntu.com>
XSBC-Original-Maintainer: Iustin Pop <iustin@debian.org>
Uploaders: Robert S. Edmonds <edmonds@debian.org>
Build-Depends: debhelper (>= 7),
 python (>= 2.6.6-3~), python-dev (>= 2.6.6-3~),
 python-setuptools (>= 0.6c9), xmlto, ant, zlib1g-dev,
 default-jdk, unzip, chrpath
Standards-Version: 3.9.1
Homepage: http://code.google.com/p/protobuf/
Vcs-Browser: http://git.debian.org/?p=collab-maint/protobuf.git
Vcs-Git: git://git.debian.org/git/collab-maint/protobuf.git
X-Python-Version: >= 2.4

Package: libprotobuf7
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers C++ library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications.

Package: libprotobuf-lite7
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers C++ library (lite version)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications whose
 message definitions have the "lite runtime" optimization setting.

Package: libprotobuf-dev
Architecture: any
Section: libdevel
Depends: ${shlibs:Depends}, ${misc:Depends}, zlib1g-dev,
 libprotobuf7 (= ${binary:Version}), libprotobuf-lite7 (= ${binary:Version})
Description: protocol buffers C++ library (development files)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static libraries needed for
 writing C++ applications.

Package: libprotoc7
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers compiler library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for the protocol buffer
 compiler.

Package: libprotoc-dev
Architecture: any
Section: libdevel
Depends: ${shlibs:Depends}, ${misc:Depends},
 libprotoc7 (= ${binary:Version}), libprotobuf-dev (= ${binary:Version})
Replaces: libprotobuf-dev (<< 2.1.0)
Breaks: libprotobuf-dev (<< 2.1.0)
Description: protocol buffers compiler library (development files)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static library needed for
 writing protobuf compilers.

Package: protobuf-compiler
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, libprotoc7 (= ${binary:Version})
Description: compiler for protocol buffer definition files
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the protocol buffer compiler that is used for
 translating from .proto files (containing the definitions) to the language
 binding for the supported languages.

Package: python-protobuf
Architecture: any
Section: python
Depends: ${shlibs:Depends}, ${python:Depends}, ${misc:Depends}
Provides: ${python:Provides}
Recommends: protobuf-compiler
Description: Python bindings for protocol buffers
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the Python bindings for the protocol buffers. You will
 need the protoc tool (in the protobuf-compiler package) to compile your
 definition to Python classes, and then the modules in this package will allow
 you to use those classes in your programs.
 .
 This package contains both the traditional Python-based
 implementation and the new C++-based one, and you can select at
 runtime between the two.

Package: libprotobuf-java
Architecture: all
Depends: ${shlibs:Depends}, ${misc:Depends}, default-jre | java5-runtime
Recommends: protobuf-compiler
Section: java
Description: Java bindings for protocol buffers
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the Java bindings for the protocol buffers. You will
 need the protoc tool (in the protobuf-compiler package) to compile your
 definition to Java classes, and then the modules in this package will allow
 you to use those classes in your programs.
